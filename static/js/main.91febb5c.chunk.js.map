{"version":3,"sources":["components/molecules/Profile.js","components/molecules/Main.js","components/molecules/Skill.js","components/App.js","serviceWorker.js","index.js"],"names":["Hoge","styled","div","Huga","Profile","Grid","container","item","xs","spacing","class","H","Link","Line","hr","Main","Skill","list","name","star","map","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2aAOA,IAAMA,EAAOC,IAAOC,IAAV,KAKJC,EAAOF,IAAOC,IAAV,KA6BKE,MAzBf,WACE,OACE,6BACE,kBAACD,EAAD,KACE,wCAEF,kBAACH,EAAD,KACE,kBAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIC,QAAS,GACpC,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,wCAEF,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,wDACA,4BACE,wBAAIE,MAAM,OAAV,oCACA,wBAAIA,MAAM,OAAV,qCACA,wBAAIA,MAAM,OAAV,mC,ugBCzBd,IAAMV,EAAOC,IAAOC,IAAV,KAKJS,EAAIV,IAAOC,IAAV,KAIDU,EAAOX,IAAOC,IAAV,KAKJW,EAAOZ,IAAOa,GAAV,KA0BKC,MAnBf,WACE,OACE,6BACE,kBAAC,EAAD,KACE,kBAACJ,EAAD,KACE,0DAEF,kBAACE,EAAD,MAEA,kBAACD,EAAD,KACE,mCACA,oCACA,0C,uVChCV,IAAMZ,EAAOC,IAAOC,IAAV,KAMJC,EAAOF,IAAOC,IAAV,KAIGD,IAAOC,IAAV,KAiGKc,MA5Ff,WACE,IA8DIC,EA9DQ,CACV,CACEC,KAAM,QACNC,KAAM,mBAER,CACED,KAAM,YACNC,KAAM,gBAER,CACED,KAAM,aACNC,KAAM,iBAER,CACED,KAAM,cACNC,KAAM,iBAER,CACED,KAAM,WACNC,KAAM,gBAER,CACED,KAAM,aACNC,KAAM,uBAER,CACED,KAAM,WACNC,KAAM,iBAER,CACED,KAAM,aACNC,KAAM,oBAER,CACED,KAAM,OACNC,KAAM,iBAER,CACED,KAAM,mBACNC,KAAM,qBAER,CACED,KAAM,QACNC,KAAM,oBAER,CACED,KAAM,WACNC,KAAM,iBAER,CACED,KAAM,mBACNC,KAAM,iBAER,CACED,KAAM,aACNC,KAAM,oBAER,CACED,KAAM,eACNC,KAAM,kBAGOC,KAAI,SAASb,GAC5B,OACE,kBAACF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,KACE,4BAAKD,EAAKW,MACV,2BAAIX,EAAKY,WAKjB,OACE,6BACE,kBAAC,EAAD,KACE,uCAGF,kBAAC,EAAD,KACE,kBAACd,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAS,GACvB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIC,QAAS,GACnCQ,KAIP,kBAAC,EAAD,MACA,kBAAC,EAAD,QC3FSI,MAXf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.91febb5c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport styled from \"@emotion/styled\";\n\nconst Hoge = styled.div`\n  display: \"flex\";\n  margin: 20;\n`;\n\nconst Huga = styled.div`\n  text-align: center;\n`;\n\nfunction Profile() {\n  return (\n    <div>\n      <Huga>\n        <h1>PROFILE</h1>\n      </Huga>\n      <Hoge>\n        <Grid container item xs={12} spacing={2}>\n          <Grid item xs={6}>\n            <h1>PROFILE</h1>\n          </Grid>\n          <Grid item xs={6}>\n            <h3>自己紹介</h3>\n            <ul>\n              <li class=\"tab\">Name: RIN1208 (Backend Engineer)</li>\n              <li class=\"tab\">Date of birth: August , 23 , 1999</li>\n              <li class=\"tab\">My location: Japan, Tokyo</li>\n            </ul>\n          </Grid>\n        </Grid>\n      </Hoge>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport styled from \"@emotion/styled\";\n\nconst Hoge = styled.div`\n  text-align: center;\n  height: 60vh;\n  background-color: #87cefa;\n`;\nconst H = styled.div`\n  color: #ffffff;\n  padding-top: 20vh;\n`;\nconst Link = styled.div`\n  color: #ffffff;\n  text-align: center;\n`;\n\nconst Line = styled.hr`\n  color: #ffffff;\n  height: 3px;\n  background-color: #ffffff;\n  border: none;\n`;\n\nfunction Main() {\n  return (\n    <div>\n      <Hoge>\n        <H>\n          <h1>Welcome to RIN1208's site</h1>\n        </H>\n        <Line />\n\n        <Link>\n          <p>Home</p>\n          <p>Skill</p>\n          <p>Carrier</p>\n        </Link>\n      </Hoge>\n    </div>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"@emotion/styled\";\nimport Rating from \"@material-ui/lab/Rating\";\n\nconst Hoge = styled.div`\n  display: \"flex\";\n  margin: 20;\n  text-align: center;\n`;\n\nconst Huga = styled.div`\n  text-align: center;\n`;\n\nconst Star = styled.div`\n  background-color: #87cefa;\n  color: #87cefa;\n`;\n\nfunction Skill() {\n  var front = [\n    {\n      name: \"Go : \",\n      star: \"October, 2018 ~\",\n    },\n    {\n      name: \"Python : \",\n      star: \"May, 2019  ~\",\n    },\n    {\n      name: \"node.js : \",\n      star: \"April, 2020 ~\",\n    },\n    {\n      name: \"Javascrpt :\",\n      star: \" June, 2019 ~\",\n    },\n    {\n      name: \"Vuejs : \",\n      star: \"June, 2019 ~\",\n    },\n    {\n      name: \"Reactjs : \",\n      star: \"June, April, 2020 ~\",\n    },\n    {\n      name: \"MySQL : \",\n      star: \"April, 2019 ~\",\n    },\n    {\n      name: \"Dynamodb :\",\n      star: \" October, 2019 ~\",\n    },\n    {\n      name: \"S3 :\",\n      star: \" June, 2019 ~\",\n    },\n    {\n      name: \"Elasticsearch : \",\n      star: \"September, 2019 ~\",\n    },\n    {\n      name: \"Git :\",\n      star: \" October, 2018 ~\",\n    },\n    {\n      name: \"Docker: \",\n      star: \"April, 2019 ~\",\n    },\n    {\n      name: \"Docker-Compose: \",\n      star: \"April, 2019 ~\",\n    },\n    {\n      name: \"Firebase: \",\n      star: \"December, 2019 ~\",\n    },\n    {\n      name: \"Kubernetes: \",\n      star: \"April, 2020 ~\",\n    },\n  ];\n  var list = front.map(function(item) {\n    return (\n      <Grid item xs={3}>\n        <Huga>\n          <h3>{item.name}</h3>\n          <p>{item.star}</p>\n        </Huga>\n      </Grid>\n    );\n  });\n  return (\n    <div>\n      <Hoge>\n        <h1>Skills</h1>\n      </Hoge>\n\n      <Hoge>\n        <Grid container spacing={1}>\n          <Grid container item xs={12} spacing={2}>\n            {list}\n          </Grid>\n        </Grid>\n      </Hoge>\n      <Hoge></Hoge>\n      <Hoge></Hoge>\n    </div>\n  );\n}\n\nexport default Skill;\n","import React from \"react\";\n\nimport Profile from \"./molecules/Profile\";\nimport Main from \"./molecules/Main\";\nimport Skill from \"./molecules/Skill\";\nimport styled from \"@emotion/styled\";\nimport { AppBar, Toolbar, Typography, TextField } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Main />\n\n      <Profile />\n      <Skill />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}